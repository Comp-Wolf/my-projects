AWSTemplateFormatVersion: 2010-09-09
Description: |
  Cloudformation Template for kittens carousel static website deploy on s3. cloudfront and route 53
Parameters:
  DomainName:
    Description: DNS Name of existing Amazon Route 53 hosted zone ex. (kittens.erdoganali.net)
    Type: AWS::Route53::HostedZone::Id
  KittensDomainName:
    Description: Full domain name for the App. ex. (kittens.erdoganali.net)
    Type: String
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
Resources:
  KittensBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: PublicRead
      BucketName: !Ref KittensDomainName
      WebsiteConfiguration:
        IndexDocument: index.html
  KittensBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref KittensBucket
      PolicyDocument: 
        Statement:
          - Sid: PublicReadforStaticWebsite
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Join ['', ['arn:aws:s3:::', !Ref 'KittensBucket', /*]]
            # Resource: !Sub "${KittenBucket.Arn}/*"
  KittensCertificate:
    Type: "AWS::CertificateManager::Certificate"
    Properties:
      CertificateTransparencyLoggingPreference: ENABLED
      DomainName: !Ref KittensDomainName #required
      DomainValidationOptions:
        - DomainName: !Ref KittensDomainName
          HostedZoneId: !Ref DomainName
      ValidationMethod: DNS
  KittenDNSName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref DomainName
      RecordSets: 
        - Name: !Ref KittensDomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt KittensCloudfront.DomainName
  KittensCloudfront:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution pointing to Kittens S3 bucket
        Aliases:
        - !Ref KittensDomainName
        ViewerCertificate:          
          AcmCertificateArn: !Ref KittensCertificate
          SslSupportMethod: sni-only
        Origins:
        - DomainName: !Select [2, !Split ["/", !GetAtt KittensBucket.WebsiteURL]]
          Id: KittensOrigin
          CustomOriginConfig: 
            OriginProtocolPolicy: http-only
        PriceClass: PriceClass_All
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: KittensOrigin
          Compress: true
          ViewerProtocolPolicy: allow-all
          AllowedMethods:
          - GET
          - HEAD
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none 

  tensCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      CertificateAuthorityArn: "String"
      CertificateTransparencyLoggingPreference: "String"
      DomainName: "String" # Required
      DomainValidationOptions:
        DomainValidationOptions
      SubjectAlternativeNames:
        SubjectAlternativeNames
      Tags:
        Tags
      ValidationMethod: "String"

Outputs:
  BucketName: 
    Description: S3 Bucket URL for Kittens Website
    Value: !GetAtt KittensBucket.WebsiteURL
  CloudfrontEndpoint:
    Description: Endpoint for Kittens Cloudfront
    Value: !GetAtt KittensCloudfront.DomainName
  FullDomainName:
    Description: Full Domain Name of my Application
    Value: !Ref KittensDomainName