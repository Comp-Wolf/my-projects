AWSTemplateFormatVersion: 2010-09-09

Description: |
  The Roman Numerals Converter Application aims to convert the given number to the Roman numerals. The application is to be coded in Python and deployed as a web application with Flask on AWS Elastic Compute Cloud (EC2) Instance using AWS Cloudformation and CLI Services.
  
Parameters:
  myVPC:
    Description: Select your VPC
    Type: AWS::EC2::VPC::Id

  mySubnets:
    Description: Select at least 2 subnets
    Type: List<AWS::EC2::Subnet::Id>

  myKP:
    Description: Select your Key
    Type: AWS::EC2::KeyPair::KeyName

  myIT:
    Description: Select instance type
    Type: String
    Default: t2.micro 
    AllowedValues: 
     - t2.micro
     - t3.micro
     - t2.nano
     - t3.nano
  
Mappings:
  RegionImageMap:
    us-east-1:
      AMI: ami-0dc2d3e4c0f9ebd18
    us-east-2:
      AMI: ami-0233c2d874b811deb
    us-west-1:
      AMI: ami-0ed05376b59b90e46
    us-west-2:
      AMI: ami-0dc8f589abe99f538
    eu-west-1:
      AMI: ami-058b1b7fe545997ae
  
Resources:
  myALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      SecurityGroups:
        - !GetAtt mySG.GroupId
      Subnets: !Ref mySubnets
      Type: application

  myListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - Type: forward
          TargetGroupArn: !Ref myTG
      LoadBalancerArn: !Ref myALB # Required
      Port: 80
      Protocol: HTTP

  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: !GetAZs 
      DesiredCapacity: "2"
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref myLT
        Version: "1"
      MaxSize: "3" # Required
      MinSize: "1" # Required
      TargetGroupARNs:
        - !Ref myTG

  myCPUPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref myASG  # Required
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 60.0

  myLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !FindInMap 
         - RegionImageMap
         - !Ref AWS::Region
         - AMI
        InstanceType: !Ref myIT
        KeyName: !Ref myKP
        SecurityGroupIds:
          - !GetAtt mySG.GroupId
        TagSpecifications:
         - ResourceType: instance
           Tags:
           - Key: Name
             Value: !Sub Web Server of ${AWS::StackName} Stack 
        UserData: !Base64 |
          #! /bin/bash
          yum update -y
          pip3 install flask
          mkdir roma-project && cd roman-project
          wget https://raw.githubusercontent.com/Comp-Wolf/my-projects/main/aws/Project-001-Roman-Numerals-Converter/app.py
          mkdir templates && cd templates
          wget https://raw.githubusercontent.com/Comp-Wolf/my-projects/main/aws/Project-001-Roman-Numerals-Converter/templates/index.html
          wget https://raw.githubusercontent.com/Comp-Wolf/my-projects/main/aws/Project-001-Roman-Numerals-Converter/templates/result.html
          cd ..
          python3 app.py

  myTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 5
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 3
      VpcId: !Ref myVPC

  mySG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables SSH and HTTP # Required
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      VpcId: !Ref myVPC
  
Outputs:
  AppUrl:
    Description: URL of the ALB
    Value: !Join 
       - ''
       - - 'http://'
         - !GetAtt myALB.DNSName